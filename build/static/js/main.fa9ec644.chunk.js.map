{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","userInput","React","createRef","goToStore","e","preventDefault","console","log","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descriptionRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.fa9ec644.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getFunName } from '../helpers'\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  }\n  userInput = React.createRef()\n  // every class needs at least 1 method (render())\n\n  goToStore = e => {\n    e.preventDefault()\n    console.log('going to store!')\n    // get text from input - don't touch the DOM! (no querySelector/$('input'))\n    const storeName = this.userInput.current.value\n    // change the page to /store/whatever-they-entered\n    // window.location =\n    this.props.history.push(`/store/${storeName}`)\n  }\n  render() {\n    return (\n      <form className='store-selector' onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type='text'\n          ref={this.userInput}\n          required\n          placeholder='Store Name'\n          defaultValue={getFunName()}\n        />\n        <button type='submit'>Visit Store -></button>\n      </form>\n    )\n  }\n}\n\nexport default StorePicker\n","import React from 'react'\nimport PropTypes from 'prop-types' // used to check type\n\n// implicit return, better performance with stateless fxn components\nconst Header = props => (\n  <header className='top'>\n    <h1>\n      Catch\n      <span className='ofThe'>\n        <span className='of'>Of</span>\n        <span className='the'>The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className='tagline'>\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n)\n\n// every prop and its type in an object\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\n// class Header extends React.Component {\n//   render() {\n//     return (\n//       <header className='top'>\n//         <h1>\n//           Catch\n//           <span className='ofThe'>\n//             <span className='of'>Of</span>\n//             <span className='the'>The</span>\n//           </span>\n//           Day\n//         </h1>\n//         <h3 className='tagline'>\n//           {/* 'this' references whatever was passed into Header component instance (like cool={true} as prop in App.js) */}\n//           <span>{this.props.tagline}</span>\n//         </h3>\n//       </header>\n//     )\n//   }\n// }\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { formatPrice } from '../helpers'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }\n  renderOrder = key => {\n    const fish = this.props.fishes[key]\n    const count = this.props.order[key]\n    const isAvailable = fish && fish.status === 'available'\n    const transitionOptions = {\n      classNames: 'order',\n      key: key,\n      timeout: { enter: 500, exit: 500 }\n    }\n    // make sure the fish is loaded before continuing\n    if (!fish) return null\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry, {fish ? fish.name : 'fish'} is no longer available!\n          </li>\n        </CSSTransition>\n      )\n    }\n    // timeout = how fast it comes in, how fast it goes out\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component='span' className='count'>\n              <CSSTransition\n                classNames='count'\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    )\n  }\n  render() {\n    const orderIds = Object.keys(this.props.order) // turns it into an array\n    const total = orderIds.reduce((prevTotal, key) => {\n      // returns the tally\n      const fish = this.props.fishes[key]\n      const count = this.props.order[key]\n      const isAvailable = fish && fish.status === 'available'\n      if (isAvailable) {\n        return prevTotal + count * fish.price\n      }\n      return prevTotal\n    }, 0)\n    // TransitionGroup - use component attribute to define what to render it as (ul)\n    return (\n      <div className='order-wrap'>\n        <h2>Order</h2>\n        <TransitionGroup component='ul' className='order'>\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className='total'>\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Order\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass AddFishForm extends React.Component {\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n  nameRef = React.createRef()\n  priceRef = React.createRef()\n  statusRef = React.createRef()\n  descriptionRef = React.createRef()\n  imageRef = React.createRef()\n\n  createFish = e => {\n    e.preventDefault()\n    // create state\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descriptionRef.current.value,\n      image: this.imageRef.current.value\n    }\n    this.props.addFish(fish)\n    // refresh form\n    e.currentTarget.reset()\n  }\n  render() {\n    return (\n      <form className='fish-edit' onSubmit={this.createFish}>\n        <input name='name' ref={this.nameRef} type='text' placeholder='Name' />\n        <input\n          name='price'\n          ref={this.priceRef}\n          type='text'\n          placeholder='Price'\n        />\n        <select name='status' ref={this.statusRef}>\n          <option value='available'>Fresh!</option>\n          <option value='unavailable'>Sold Out!</option>\n        </select>\n        <textarea name='desc' ref={this.descriptionRef} placeholder='Desc' />\n        <input\n          name='image'\n          ref={this.imageRef}\n          type='text'\n          placeholder='Image'\n        />\n        <button type='submit'>+ Add Fish</button>\n      </form>\n    )\n  }\n}\n\nexport default AddFishForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  }\n  handleChange = e => {\n    // currentTarget is the thing that event got fired on\n    console.log(e.currentTarget.value)\n    // how to update - show state of current fish, then update whatever fields you want\n    const updatedFish = {\n      ...this.props.fish,\n      [e.currentTarget.name]: e.currentTarget.value // updates whatever field you're in, but doesn't change state yet\n    }\n    console.log(updatedFish)\n    // sends update upstream\n    this.props.updateFish(this.props.index, updatedFish)\n  }\n  render() {\n    return (\n      <div className='fish-edit'>\n        <input\n          type='text'\n          name='name'\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type='text'\n          name='price'\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type='text'\n          name='status'\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value='available'>Fresh!</option>\n          <option value='unavailable'>Sold Out!</option>\n        </select>\n        <textarea\n          name='desc'\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type='text'\n          name='image'\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default EditFishForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Login = props => (\n  <nav className='login'>\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory!</p>\n    <button className='github' onClick={() => props.authenticate('Github')}>\n      Log In With GitHub\n    </button>\n    <button className='facebook' onClick={() => props.authenticate('Facebook')}>\n      Log In With Facebook\n    </button>\n    <button className='twitter' onClick={() => props.authenticate('Twitter')}>\n      Log In With Twitter\n    </button>\n  </nav>\n)\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n}\n\nexport default Login\n","import Rebase from 're-base' // mirror state to FB\nimport firebase from 'firebase'\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyAQQ1itXUGohVsjQP8zr7dp1iFdI8r6n-I',\n  authDomain: 'catch-of-the-day-vinson.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-vinson.firebaseio.com'\n})\n\nconst base = Rebase.createClass(firebaseApp.database())\n\n// named export\nexport { firebaseApp }\n\n// defaut export\nexport default base\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport AddFishForm from './AddFishForm'\nimport EditFishForm from './EditFishForm'\nimport Login from './Login'\nimport base, { firebaseApp } from '../base'\nimport firebase from 'firebase'\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  }\n  state = {\n    uid: null,\n    owner: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({\n          user\n        })\n      }\n    })\n  }\n\n  authHandler = async authData => {\n    //provides payload of info about user signing in\n    // Look up current store in FB DB\n    const store = await base.fetch(this.props.storeId, { context: this })\n    console.log(store)\n    // claim it if there's no owner\n    if (!store.owner) {\n      // save it as mine\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // set state of inventory component to reflect current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    })\n    console.log(authData)\n  }\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]()\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler) // brings connect to FB auth\n  }\n\n  logout = async () => {\n    console.log('logging out!')\n    await firebase.auth().signOut()\n    this.setState({\n      uid: null\n    })\n  }\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>\n    // check if user is logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />\n    }\n\n    // check if user is NOT owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner!</p>\n          {logout}\n        </div>\n      )\n    }\n\n    // they must be the owner so render inventory\n    return (\n      <div className='inventory'>\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Inventory\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { formatPrice } from '../helpers'\n\nclass Fish extends React.Component {\n  static propTypes = {\n    // .shape you can create an object and declare each property with a diff type\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addtoOrder: PropTypes.func\n  }\n  render() {\n    const { image, name, price, desc, status } = this.props.details\n    const isAvailable = status === 'available'\n    return (\n      <li className='menu-fish'>\n        <img src={image} alt={name} />\n        <h3 className='fish-name'>\n          {name}\n          <span className='price'>{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => {\n            this.props.addToOrder(this.props.index)\n          }}\n        >\n          {isAvailable ? 'Add To Order' : 'Sold Out!'}\n        </button>\n      </li>\n    )\n  }\n}\n\nexport default Fish\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './Header'\nimport Order from './Order'\nimport Inventory from './Inventory'\nimport sampleFishes from '../sample-fishes'\nimport Fish from './Fish'\nimport base from '../base'\n\nclass App extends React.Component {\n  // the state and the methods that update state need to live in the exact same component\n  state = {\n    fishes: {},\n    order: {}\n  }\n\n  static propTypes = {\n    match: PropTypes.object\n  }\n\n  componentDidMount() {\n    // once App mounts (initial load included), sync with FB DB\n    const { params } = this.props.match\n    // first re-instate any localStorage\n    const localStorageRef = localStorage.getItem(params.storeId)\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) })\n    }\n    console.log(localStorageRef)\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes'\n    })\n  }\n\n  // runs when anything is updated, NOT on initial load\n  componentDidUpdate() {\n    // console.log(this.state.order)\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    )\n  }\n\n  // if user goes back and forth between stores, can lead to \"memory leak\" as FB would never UNlisten for changes\n  componentWillUnmount() {\n    // this will UNlisten once component is unmounted\n    base.removeBinding(this.ref)\n  }\n\n  addFish = fish => {\n    // take copy of existing state (so you don't \"mutate\" the state directly)\n    const fishes = { ...this.state.fishes }\n    // add new fish to our fishes variable, with timestamp to make unique\n    fishes[`fish${Date.now()}`] = fish\n    // set the new fishes object to state, if diff detected, will update new state automatically\n    this.setState({\n      fishes\n    })\n  }\n\n  updateFish = (key, updatedFish) => {\n    // take copy of current state\n    const fishes = { ...this.state.fishes }\n    // update state\n    fishes[key] = updatedFish\n    // set that to state\n    this.setState({\n      fishes: fishes\n    })\n  }\n\n  deleteFish = key => {\n    // snapshot of state\n    const fishes = { ...this.state.fishes }\n    // update state\n    fishes[key] = null // for FB to update\n    this.setState({ fishes })\n  }\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes\n    })\n  }\n\n  addToOrder = key => {\n    // take copy of state\n    const order = { ...this.state.order }\n    // either add or subtract from number in order\n    // if order.fish[key] exists, increment\n    order[key] = order[key] + 1 || 1\n    // setState to update our state object\n    this.setState({ order: order })\n  }\n\n  removeFromOrder = key => {\n    // take copy of state\n    const order = { ...this.state.order }\n    // remove item from order\n    delete order[key]\n    // setState to update our state object\n    this.setState({ order: order })\n  }\n\n  render() {\n    return (\n      <div className='catch-of-the-day'>\n        <div className='menu'>\n          <Header tagline='Fresh Seafood Market' />\n          <ul className='fishes'>\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\n\n// implicit return, better performance with stateless fxn components\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>Page Not Found!!</h1>\n    </div>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport StorePicker from './StorePicker'\nimport App from './App'\nimport NotFound from './NotFound'\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path='/' component={StorePicker} />\n      <Route path='/store/:storeId' component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router\n","// // let's go!\n// alert('hi!')\nimport React from 'react'\nimport { render } from 'react-dom'\nimport Router from './components/Router'\nimport './css/style.css' // react will load in css into a style tag and auto-reload any changes\n\nrender(<Router />, document.querySelector('#main'))\n"],"sourceRoot":""}